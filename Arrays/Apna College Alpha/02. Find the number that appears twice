Problem:
- You are given a vector of numbers
- Return true if there are duplicates and false otherwise

Brute Force:
- use a for loop to iterate through every element
- use another nested for loop to then iterate through every other element
- return true if the 2 elements are equal
- return false at the end of both loops

TC: O(n^2)

Optimal approach:
- use a set datatype
- use a for loop to iterate through every element
- if that element exists in the set, it is a duplicate and so return true
- at the end of for loop, return false

Code:
bool containsDuplicate(vector<int>& nums) {
        int n = nums.size();
        set<int> hash_set;
        for (int i = 0; i < n; i++){
            if (hash_set.find(nums[i]) != hash_set.end()){
                return true;
            }
            else {
                hash_set.insert(nums[i]);
            }
        }
        return false;
    }

TC: O(n)
